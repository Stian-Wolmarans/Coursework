Notes --> Assement, Code Walk-through

Simple_Storage.sol

- Firstly include license e.g. // SPDX-License-Identifier: UNLICENSED
- Compiler version, up arrow indicates to the compiler to use any version above 0.4.8
- Unsigned int means that it can only be a positive value in the range of 256 bits
- Could consider using a smaller value as 256bits is relatively large, which could save gas
- Noticed that uint8 used more gas than uint, so that tells me that maybe uint is set to a flexible range based on input
- Two functions are accessible within the scope of the contract once it is deployed
- Set function can have its visibility set to public or external
- Setting it to private or internal wouldn't work in this case as we're calling it externally
- From what I've read external should be cheaper in terms of gas but for this transaction I didn't notice a gas cost difference
- Get function can have its mutability set to view as it only needs to retrieve a value and doesn't alter the state
- Can't be set to pure as data from the blockchain within the contract is read i.e. the value of x

ERC721.sol

- Some key words to go over
	- Interface  -->
	- calldata   --> 
	- mapping    -->
	- require    -->
	- msg.sender -->
	- emit       --> 
- Make inheritance chart
- Function explanations
- Walk through chart

Factory.sol




